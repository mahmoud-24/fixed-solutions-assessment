apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: devops-tools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-server
  template:
    metadata:
      labels:
        app: jenkins-server
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: jenkins-admin
      containers:
        - name: jenkins
          image: jenkins/jenkins:lts
          resources:
            limits:
              memory: "2Gi"
              cpu: "1000m"
            requests:
              memory: "500Mi"
              cpu: "500m"
          ports:
            - name: httpport
              containerPort: 8080
            - name: jnlpport
              containerPort: 50000
          livenessProbe:
            httpGet:
              path: "/login"
              port: 8080
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: "/login"
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: jenkins-data
              mountPath: /var/jenkins_home

            - name: kubernetes
              mountPath: /usr/bin/kubectl
              subPath: kubectl

      initContainers:
        - name: init-k8s
          image: alpine/k8s:1.23.13
          command: ["cp", "/usr/bin/kubectl", "/opt/temp"]

          volumeMounts:
            - name: kubernetes
              mountPath: "/opt/temp"
        - name: init-docker
          image: docker
          command: ["cp","/usr/local/bin/docker", "/opt/tmp"]
       
    
          volumeMounts:  
            - name: docker
              mountPath: /opt/tmp
      volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins-pv-claim

        - name: kubernetes
          emptyDir: {}
        - name: docker
          emptyDir: {}
        
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
