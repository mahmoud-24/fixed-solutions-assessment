# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: jenkins-pv
# spec:
#   capacity:
#     storage: 10Gi
#   accessModes:
#     - ReadWriteOnce
#   hostPath:
#     path: /mnt/data
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: jenkins-pvc
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 10Gi
#   volumeName: jenkins-pv
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: jenkins
#   labels:
#     app: jenkins
# spec:
#   type: LoadBalancer
#   selector:
#     app: jenkins
#   ports:
#   - name: http
#     port: 8080
#     targetPort: 8080
#     protocol: TCP
#   - name: jnlp
#     port: 50000
#     targetPort: 50000
#     protocol: TCP
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: jenkins
#   labels:
#     app: jenkins
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: jenkins
#   template:
#     metadata:
#       labels:
#         app: jenkins
#     spec:
#       initContainers:
#       - name: docker-init
#         image: docker:latest
#         command: ['sh', '-c', 'apk update && apk add --no-cache docker-cli']
#         volumeMounts:
#         - name: jenkins-data
#           mountPath: /var/jenkins_home
#         - name: docker-socket
#           mountPath: /var/run/docker.sock
#       containers:
#       - name: jenkins
#         image: jenkins/jenkins:lts
#         ports:
#         - containerPort: 8080
#         volumeMounts:
#         - name: jenkins-data
#           mountPath: /var/jenkins_home
#         - name: docker-socket
#           mountPath: /var/run/docker.sock
#       volumes:
#       - name: jenkins-data
#         persistentVolumeClaim:
#           claimName: jenkins-pvc
#       - name: docker-socket
#         hostPath:
#           path: /var/run/docker.sock
